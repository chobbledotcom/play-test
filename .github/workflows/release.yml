name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  test:
    uses: ./.github/workflows/test.yml
    
  lint:
    uses: ./.github/workflows/standard.yml
    permissions:
      checks: write
      contents: write

  release:
    needs: [test, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Get current version
        id: current
        run: |
          CURRENT_VERSION=$(ruby -r ./lib/en14960/version.rb -e "puts EN14960::VERSION")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
      
      - name: Calculate new version
        id: new
        run: |
          CURRENT="${{ steps.current.outputs.version }}"
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          case "${{ inputs.version }}" in
            major)
              NEW_VERSION="$((MAJOR + 1)).0.0"
              ;;
            minor)
              NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
              ;;
            patch)
              NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
              ;;
          esac
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Update version
        run: |
          sed -i 's/VERSION = "[^"]*"/VERSION = "${{ steps.new.outputs.version }}"/' lib/en14960/version.rb
          bundle config set frozen false
          bundle install
      
      - name: Commit version bump
        run: |
          git add lib/en14960/version.rb Gemfile.lock
          git commit -m "Bump version to ${{ steps.new.outputs.version }}"
      
      - name: Create tag
        run: |
          git tag -a "v${{ steps.new.outputs.version }}" -m "Release version ${{ steps.new.outputs.version }}"
      
      - name: Push changes
        run: |
          git push origin main
          git push origin "v${{ steps.new.outputs.version }}"
      
      - name: Publish to RubyGems
        uses: rubygems/release-gem@v1
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.new.outputs.version }}
          name: Release ${{ steps.new.outputs.version }}
          body: |
            # v${{ steps.new.outputs.version }}
            
            [Read the full changelog here](https://github.com/${{ github.repository }}/compare/v${{ steps.current.outputs.version }}...v${{ steps.new.outputs.version }})
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
