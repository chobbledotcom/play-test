<%
  # Determine form context
  unit = @unit || local_assigns[:unit]
  form_url = local_assigns[:form_url] || nil
%>

<%= render 'chobble_forms/form_context',
  model: unit,
  i18n_base: 'forms.units',
  url: form_url do |form| %>
  <%= render 'chobble_forms/fieldset', legend_key: 'unit_details' do %>
    <%# Show ID field when UNIT_BADGES is enabled %>
    <% if ENV["UNIT_BADGES"] == "true" %>
      <% if unit.persisted? %>
        <%# Display ID as read-only for existing units %>
        <div>
          <label><%= t('forms.units.fields.id') %></label>
          <p style="margin: 0.5em 0; padding: 0.5em; background-color: #f5f5f5;">
            <strong><%= unit.id %></strong>
          </p>
        </div>
      <% else %>
        <%# Editable ID field for new units %>
        <%= render 'chobble_forms/text_field', field: :id, required: true %>
      <% end %>
    <% end %>

    <%= render 'chobble_forms/text_field', field: :name, required: true %>

    <%# Unit type - only for development or test mode %>
    <% if Rails.env.development? || Rails.env.test? %>
      <%= render 'chobble_forms/select', field: :unit_type,
          options: options_for_select([
            [t('units.unit_types.bouncy_castle'), 'bouncy_castle'],
            [t('units.unit_types.bouncing_pillow'), 'bouncing_pillow']
          ], unit.unit_type),
          required: true %>
    <% end %>

    <%# Operator with optional count link %>
    <% if unit.persisted? && unit.operator.present? %>
      <% operator_count = current_user.units.where(operator: unit.operator).count %>
      <% if operator_count > 0 %>
        <%= render 'chobble_forms/field_with_link',
            field_type: :autocomplete_field,
            field: :operator,
            required: true,
            options: operator_options(current_user),
            link_url: units_path(operator: unit.operator),
            link_text: t('units.labels.all_count', count: operator_count) %>
      <% else %>
        <%= render 'chobble_forms/autocomplete_field', field: :operator, required: true, options: operator_options(current_user) %>
      <% end %>
    <% else %>
      <%= render 'chobble_forms/autocomplete_field', field: :operator, required: true, options: operator_options(current_user) %>
    <% end %>

    <%# Photo upload %>
    <%= turbo_frame_tag "unit_photo_preview" do %>
      <%= render 'chobble_forms/file_field', field: :photo, accept: "image/*" %>
    <% end %>
  <% end %>

  <%= render 'chobble_forms/fieldset', legend_key: 'manufacture' do %>
    <%= render 'chobble_forms/date_field', field: :manufacture_date %>

    <%# Manufacturer with optional count link %>
    <% if unit.persisted? && unit.manufacturer.present? %>
      <% manufacturer_count = current_user.units.where(manufacturer: unit.manufacturer).count %>
      <% if manufacturer_count > 0 %>
        <%= render 'chobble_forms/field_with_link',
            field_type: :text_field,
            field: :manufacturer,
            required: true,
            link_url: units_path(manufacturer: unit.manufacturer),
            link_text: t('units.labels.all_count', count: manufacturer_count) %>
      <% else %>
        <%= render 'chobble_forms/text_field', field: :manufacturer, required: true %>
      <% end %>
    <% else %>
      <%= render 'chobble_forms/text_field', field: :manufacturer, required: true %>
    <% end %>

    <%= render 'chobble_forms/text_field', field: :serial, required: true %>
    <%= render 'chobble_forms/text_area', field: :description, required: true %>
  <% end %>

  <%# Only show data fieldset if unit is persisted %>
  <% if unit.persisted? %>
    <%= render 'chobble_forms/fieldset', legend_key: 'data' do %>
      <%# Display size from last inspection (read-only) %>
      <% if unit.last_inspection %>
        <div>
          <label><%= t("units.fields.size_unit") %></label>
          <p style="margin: 0.5em 0; padding: 0.5em; background-color: #f5f5f5;">
            <%= unit.last_inspection.width %>m × <%= unit.last_inspection.length %>m × <%= unit.last_inspection.height %>m
            <em><%= t("units.labels.from_last_inspection") %></em>
          </p>
        </div>
      <% end %>

      <%# Unit report links %>
      <div>
        <label><%= t("units.fields.reports") %></label>
        <ul class="report-links">
          <li>
            <strong><%= t("units.labels.unit_reports") %>:</strong>
            <%= link_to "PDF", unit_path(unit, format: :pdf), target: "_blank" %>
            <%= render 'shared/share_button',
                       url: unit_url(unit, format: :pdf),
                       title: "Unit #{unit.serial} Report",
                       copied_text: t("shared.messages.link_copied"),
                       button_text: t("shared.buttons.share") %>
            /
            <%= link_to t("units.fields.qr_code"), unit_path(unit, format: :png), target: "_blank" %>
            /
            <%= link_to "JSON", unit_path(unit, format: :json), target: "_blank" %>
          </li>

          <li>
            <strong><%= t("units.labels.last_inspection_reports") %>:</strong>
            <% if unit.last_inspection %>
              <%= link_to "PDF", inspection_path(unit.last_inspection, format: :pdf), target: "_blank" %>
              <%= render 'shared/share_button',
                         url: inspection_url(unit.last_inspection, format: :pdf),
                         title: "Inspection #{unit.last_inspection.id} Report",
                         copied_text: t("shared.messages.link_copied"),
                         button_text: t("shared.buttons.share") %>
              /
              <%= link_to t("units.fields.qr_code"), inspection_path(unit.last_inspection, format: :png), target: "_blank" %>
              /
              <%= link_to "JSON", inspection_path(unit.last_inspection, format: :json), target: "_blank" %>
            <% else %>
              <em><%= t("units.messages.no_complete_inspections") %></em>
            <% end %>
          </li>
        </ul>
      </div>
    <% end %>
  <% end %>
<% end %>
