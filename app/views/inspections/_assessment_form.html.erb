<%
  # Assessment type passed in as local variable
  assessment = @inspection.send("#{assessment_type}_assessment")

  # Determine which assessments have safety standards displays
  has_safety_standards = %w[anchorage slide user_height].include?(assessment_type)

  # Reference partials for safety standards (only some assessments have them)
  reference_partials = case assessment_type
  when 'slide' then ['shared/safety_standards/slide_safety_requirements']
  when 'user_height' then ['shared/safety_standards/wall_height_requirements']
  else []
  end
  
  # Check if there are incomplete fields for this inspection
  has_incomplete_fields = assessment.inspection.incomplete_fields.any?
  submit_key = has_incomplete_fields ? "submit_continue" : "submit"
%>

<%= render 'chobble_forms/form_context',
  model: assessment,
  i18n_base: "forms.#{assessment_type}",
  submit_key: submit_key,
  url: send("inspection_#{assessment_type}_assessment_path", @inspection) do |form| %>
  <%= hidden_field_tag :tab, assessment_type %>
  <%= render 'chobble_forms/fields', model: assessment %>

  <% if has_safety_standards %>
    <%= render 'shared/safety_standards_display',
        reference_partials: reference_partials,
        dynamic_content: -> do %>
      <%= turbo_frame_tag "#{assessment_type}_safety_results" do %>
        <% @assessment = assessment %>
        <%= render "assessments/#{assessment_type}_safety_results" %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
