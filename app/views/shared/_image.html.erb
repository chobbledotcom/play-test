<%
  # Shared image partial for consistent image rendering
  # Required locals: image (ActiveStorage attachment)
  # Optional locals: size (:thumbnail or :full), alt (alt text)

  image_attachment = local_assigns[:image]
  size = local_assigns[:size] || :thumbnail
  alt_text = local_assigns[:alt] || ""

  return unless image_attachment&.attached?

  # Don't try to display images that aren't persisted yet (validation failures)
  return unless image_attachment.blob.persisted?
  
  # Don't try to display images whose files don't exist on disk
  return unless image_attachment.blob.service.exist?(image_attachment.blob.key)

  variant = case size
  when :full
    image_attachment
  when :thumbnail
    ImageProcessorService.thumbnail(image_attachment)
  else
    ImageProcessorService.default(image_attachment)
  end
  
  # Ensure variant is processed for Safari compatibility
  variant = variant.processed if variant.respond_to?(:processed)
  
  # Get actual dimensions based on metadata
  # Ensure blob is analyzed before trying to get dimensions
  image_attachment.blob.analyze unless image_attachment.blob.analyzed?
  metadata = image_attachment.blob.metadata
  dimensions = ImageProcessorService.calculate_dimensions(metadata, size)
%>

<%= image_tag variant,
    alt: alt_text,
    width: dimensions[:width],
    height: dimensions[:height],
    loading: "lazy",
    decoding: "async" %>
