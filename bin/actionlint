#!/usr/bin/env bash

# This script runs actionlint, preferring Nix if available
# For NixOS users, it will use nix-shell to get actionlint
# For others, it will download and use a local binary

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ACTIONLINT_BINARY="$SCRIPT_DIR/.actionlint-binary"

# Check if we're on NixOS or have nix-shell available
if command -v nix-shell >/dev/null 2>&1; then
    # Use Nix to run actionlint
    exec nix-shell -p actionlint --run "actionlint $*"
else
    # Fallback: download binary if not present
    if [ ! -f "$ACTIONLINT_BINARY" ]; then
        echo "actionlint not found and Nix not available. Downloading binary..."
        
        # Detect OS and architecture
        OS=$(uname -s | tr '[:upper:]' '[:lower:]')
        ARCH=$(uname -m)
        
        case "$ARCH" in
            x86_64) ARCH="amd64" ;;
            aarch64|arm64) ARCH="arm64" ;;
            armv7l) ARCH="armv7" ;;
            *) echo "Unsupported architecture: $ARCH"; exit 1 ;;
        esac
        
        VERSION="1.7.7"
        URL="https://github.com/rhysd/actionlint/releases/download/v${VERSION}/actionlint_${VERSION}_${OS}_${ARCH}.tar.gz"
        
        TEMP_DIR=$(mktemp -d)
        trap "rm -rf $TEMP_DIR" EXIT
        
        curl -L -o "$TEMP_DIR/actionlint.tar.gz" "$URL" || exit 1
        tar -xzf "$TEMP_DIR/actionlint.tar.gz" -C "$TEMP_DIR" || exit 1
        mv "$TEMP_DIR/actionlint" "$ACTIONLINT_BINARY" || exit 1
        chmod +x "$ACTIONLINT_BINARY"
    fi
    
    exec "$ACTIONLINT_BINARY" "$@"
fi