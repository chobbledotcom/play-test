#!/usr/bin/env bash

# bin/docker-test - Build and test the Docker image locally
# This script mimics what the GitHub Action does without act

set -e  # Exit on first error

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Building and testing Docker image locally...${NC}\n"

# Build the Docker image with development dependencies
echo -e "${BLUE}Building Docker image with development dependencies...${NC}"
if docker build \
  --build-arg BUNDLE_WITHOUT="" \
  --build-arg RAILS_ENV=test \
  -t play-test:local-test .; then
  echo -e "${GREEN}✓ Docker build successful${NC}"
else
  echo -e "${RED}✗ Docker build failed${NC}"
  exit 1
fi

# Run tests in the container
echo -e "\n${BLUE}Running tests in Docker container...${NC}"
if docker run --rm \
  -e RAILS_ENV=test \
  -e SECRET_KEY_BASE="test_secret_key_base_1234567890abcdef1234567890abcdef1234567890ab" \
  -e DISABLE_SIMPLECOV=true \
  play-test:local-test \
  sh -c "bundle exec rails db:create db:schema:load && bundle exec rake test:docker"; then
  echo -e "${GREEN}✓ Tests passed${NC}"
else
  echo -e "${RED}✗ Tests failed${NC}"
  exit 1
fi

# Test that the container can start
echo -e "\n${BLUE}Testing container startup...${NC}"
docker run -d --name test-container \
  -e RAILS_MASTER_KEY="${RAILS_MASTER_KEY:-}" \
  -e SECRET_KEY_BASE="${SECRET_KEY_BASE:-test_secret_key_base_1234567890abcdef1234567890abcdef1234567890ab}" \
  -p 3000:3000 \
  play-test:local-test

# Wait for Rails to start
echo "Waiting for Rails to start..."
for i in {1..30}; do
  if docker logs test-container 2>&1 | grep -q "Listening on"; then
    echo -e "${GREEN}✓ Rails started successfully!${NC}"
    break
  fi
  if [ $i -eq 30 ]; then
    echo -e "${RED}✗ Rails failed to start within 30 seconds${NC}"
    docker logs test-container
    docker stop test-container
    docker rm test-container
    exit 1
  fi
  sleep 1
done

# Clean up
docker stop test-container
docker rm test-container

echo -e "\n${GREEN}✓ All Docker tests passed!${NC}"
echo -e "${YELLOW}Your Docker image is ready for release.${NC}"