# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedPathHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedPathHelpersModule`.


module GeneratedPathHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def activate_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_seeds_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_files_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_releases_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def backups_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def callback_credentials_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_password_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_settings_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def complete_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_unit_from_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def credential_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def credentials_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deactivate_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_seeds_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_backups_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_inspector_company_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_page_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_unit_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guide_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def impersonate_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_anchorage_assessment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_enclosed_assessment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_fan_assessment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_materials_assessment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_slide_assessment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_structure_assessment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_user_height_assessment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspections_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspector_companies_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspector_company_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def log_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def log_unit_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def login_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def logout_everywhere_else_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def logout_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_draft_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_inspector_company_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_page_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_unit_from_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_unit_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def page_by_slug_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def page_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def passkey_callback_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def passkey_login_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_notes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def register_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def safety_standards_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def select_unit_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stop_impersonating_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_edit_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_edit_unit_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_update_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_update_unit_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unit_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def units_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_password_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_unit_inspection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_rpii_user_path(*args); end
end
