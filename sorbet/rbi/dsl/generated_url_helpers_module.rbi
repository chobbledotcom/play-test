# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.


module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def activate_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_seeds_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_releases_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def backups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def callback_credentials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_password_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_settings_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def complete_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_unit_from_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def credential_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def credentials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deactivate_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_seeds_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_backups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_inspector_company_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_unit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guide_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def impersonate_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_anchorage_assessment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_enclosed_assessment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_fan_assessment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_materials_assessment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_slide_assessment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_structure_assessment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspection_user_height_assessment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspector_companies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inspector_company_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def log_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def log_unit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def logout_everywhere_else_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def logout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_draft_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_inspector_company_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_unit_from_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_unit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def page_by_slug_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def passkey_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def passkey_login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_notes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def register_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def safety_standards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def select_unit_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stop_impersonating_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_edit_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_edit_unit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_update_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unified_update_unit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def units_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_password_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_unit_inspection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_rpii_user_url(*args); end
end
